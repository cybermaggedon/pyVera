#!/usr/bin/env python

import json
import sys
import vera
import csv
  
if len(sys.argv) != 3:
    sys.stderr.write("Usage:\n    update_scenes <config> <room>\n")
    sys.exit(1)

config = json.loads(open(sys.argv[1], "r").read())

schedule = []
reader = csv.reader(sys.stdin)
for row in reader:

    # Ignore empty lines
    if len(row) == 0: continue

    schedule.append({
        "name": row[0],
        "days": row[1],
        "device": row[2],
        "action": row[3],
        "value": row[4],
        "times": row[5:]
        })

if config.has_key("local"):
    ve = vera.VeraLocal(config["local"]["address"])
else:
    user = config["remote"]["user"]
    password = config["remote"]["password"]
    device = config["remote"]["device"]
    ve = vera.VeraRemote(user, password, device)

room = sys.argv[2]
room = ve.get_room(room)

for i in ve.get_scenes():
    if i.room == room:
        print "Deleting scene %s" % i.name
        ve.delete_scene(i)

for s in schedule:

    device = ve.get_device(s["device"])

    if s["action"] == "set":
        action = vera.SetpointAction(device, s["value"])
    elif s["action"] == "switch":
        action = vera.SwitchAction(device, s["value"])
    elif s["action"] == "heat":
        action = vera.HeatingAction(device, s["value"])
    else:
        raise RuntimeError, "Don't know about action '%s'" % s["action"]

    actions = vera.Group(0, [action])

    timers = []

    for i in s["times"]:

        hours = int(i.split(":")[0])
        minutes = int(i.split(":")[1])
        time = vera.Time(hours, minutes)
        timer = vera.DayOfWeekTimer(1, "time", s["days"], time)
        timers.append(timer)

    # All modes except vacation
    m = vera.Modes(home=True, away=True, night=True)

    sd = vera.SceneDefinition(s["name"], [], m, timers, [actions], room)

    print "Adding scene %s..." % s["name"]

    ve.create_scene(sd)


