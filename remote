#!/usr/bin/env python

import sha
import urllib2
import json
import base64

user = "USER"
password = "PASSWORD"
device=40000000

############################################################################

# Hard-coded auth seed
seed = "oZ7QE6LcLJp6fiWzdqZc"

sha1p = sha.new(user.lower() + password + seed)
sha1p = sha1p.hexdigest()

url="https://vera-us-oem-autha11.mios.com/autha/auth/username/%s?SHA1Password=%s&PK_Oem=1" % (user.lower(), sha1p)

conn = urllib2.urlopen(url)
response = json.loads(conn.read())
conn.close()

server_account = response["Server_Account"]
auth_token = response["Identity"]
auth_sig = response["IdentitySignature"]

############################################################################

headers = {"MMSAuth": auth_token, "MMSAuthSig": auth_sig}

request = urllib2.Request("https://vera-us-oem-authd11.mios.com/info/session/token",
                          headers=headers)

conn = urllib2.urlopen(request)
session_token = conn.read()
conn.close()

print "Session token:", session_token

############################################################################

headers = { "MMSSession": session_token }

request = urllib2.Request("https://vera-us-oem-authd11.mios.com/locator/locator/locator",
                          headers=headers)

conn = urllib2.urlopen(request)
devices = json.loads(conn.read())
conn.close()

print devices

server_device=None

for i in devices["Devices"]:
    print i["PK_Device"], i["InternalIP"]
    if i["PK_Device"] == device:
        server_device = i["Server_Device"]

print "Will use server device", server_device

############################################################################

conn = urllib2.urlopen("http://192.168.0.202/port_3480/data_request?id=variableget&Variable=PK_AccessPoint")
print conn.read()
conn.close()

############################################################################

headers = {"MMSAuth": auth_token, "MMSAuthSig": auth_sig}

request = urllib2.Request("https://" + server_device + "/info/session/token",
                          headers=headers)

conn = urllib2.urlopen(request)
session_token = conn.read()
conn.close()

print "Session token:", session_token

############################################################################

headers = { "MMSSession": session_token }
request = urllib2.Request("https://" + server_device + "/device/device/device/" + str(device),
                          headers=headers)
conn = urllib2.urlopen(request)
relay_info = json.loads(conn.read())
conn.close()

relay = relay_info["Server_Relay"]

print "Server relay is", relay

############################################################################

headers = {"MMSAuth": auth_token, "MMSAuthSig": auth_sig}

request = urllib2.Request("https://" + relay + "/info/session/token",
                          headers=headers)

conn = urllib2.urlopen(request)
session_token = conn.read()
conn.close()

print "Session token:", session_token

############################################################################

headers = { "MMSSession": session_token }

request = urllib2.Request("https://" + relay + "/relay/relay/relay/device/" + str(device) + "/port_3480/data_request?id=variableget&Variable=PK_AccessPoint",
                          headers=headers)
conn = urllib2.urlopen(request)
print conn.read()
conn.close()

############################################################################

account_info = json.loads(base64.b64decode(auth_token))

pk_account = account_info["PK_Account"]

print pk_account

############################################################################

headers = {"MMSAuth": auth_token, "MMSAuthSig": auth_sig}

request = urllib2.Request("https://" + server_account + "/info/session/token",
                          headers=headers)

conn = urllib2.urlopen(request)
session_token = conn.read()
conn.close()

print "Session token:", session_token

############################################################################

url = "https://" + server_account + "/account/account/account/" + str(pk_account) + "/devices"

print url

headers = { "MMSSession": session_token }
request = urllib2.Request(url, headers=headers)

conn = urllib2.urlopen(request)
print conn.read()
conn.close()

